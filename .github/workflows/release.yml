name: Release Workflow

on:
  push:
    branches:
      - main
    paths:
      - '**/pom.xml'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version_change.outputs.version_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Get the current POM version
        run: |
          echo "CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Determine if version changed
        id: version_change
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "0")
          if [ "$CURRENT_VERSION" != "$LATEST_TAG" ]; then
            echo "::set-output name=version_changed::true"
          else
            echo "::set-output name=version_changed::false"
          fi

  release:
    needs: check-version
    if: ${{ needs.check-version.outputs.version_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.CURRENT_VERSION }}
          release_name: Release ${{ env.CURRENT_VERSION }}
          draft: false
          prerelease: ${{ contains(env.CURRENT_VERSION, 'SNAPSHOT') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
