name: Release Workflow

on:
  push:
    branches:
      - main
    paths:
      - '**/pom.xml'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version_check.outputs.new_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21' # Adjust the Java version as needed
          distribution: 'temurin'

      - name: Determine new version
        id: version_check
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          if [ "$current_version" != "$latest_tag" ]; then
            echo "::set-output name=new_version::$current_version"
          else
            echo "::set-output name=new_version::"
          fi

  release:
    needs: prepare
    if: ${{ needs.prepare.outputs.new_version }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21' # Adjust the Java version as needed
          distribution: 'temurin'

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.prepare.outputs.new_version }}
          release_name: Release ${{ needs.prepare.outputs.new_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
