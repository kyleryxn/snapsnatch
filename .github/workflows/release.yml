name: Release Workflow

on:
  push:
    branches:
      - main
    paths:
      - '**/pom.xml'

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Get the current POM version
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
          echo "Current version is ${CURRENT_VERSION}"

      - name: Get latest tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "Latest tag is ${LATEST_TAG}"

      - name: Check for version change
        run: |
          if [ "$CURRENT_VERSION" == "$LATEST_TAG" ]; then
            echo "No version change detected in pom.xml, skipping release."
            exit 0
          else
            echo "Version change detected, proceeding with release."
          fi

  release:
    needs: check-version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.CURRENT_VERSION }}
          release_name: Release ${{ env.CURRENT_VERSION }}
          draft: false
          prerelease: false
